name: Run Demo
on: [push, pull_request]


jobs:
  tests:
    name: Run Demo
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      ENV_NAME: testing
    strategy:
      fail-fast: false
      matrix:
        demo: ["coeval_cubes", "gather_data", "lightcones", "mini-halos", "relative_velocities"]
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          # auto-update-conda: true
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          environment-file: ci/${{ matrix.os }}-env.yml
          activate-environment: tests
          channel-priority: strict
          use-only-tar-bz2: true

      - name: Conda Info
        run: |
          conda info
          python --version

      - name: Get C Libraries Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libfftw3-dev
          sudo apt-get install libgsl0-dev

      - name: Install 21cmFAST Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          LOG_LEVEL=${{ env.log_level }} pip install .

      - name: Install 21cmFAST MacOS
        if: matrix.os == 'macos-latest'
        run: |
          LOG_LEVEL=${{ env.log_level }} CFLAGS="-isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk" pip install .


      - name: Install ipykernel
        run: python -m ipykernel install --user --name fast --display-name "sense"

      - name: Run Notebook
        run: |
          papermill -k fast docs/tutorials/${{ matrix.demo }}.ipynb output-${{ matrix.demo }}.ipynb

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.demo }}
          path: output-${{ matrix.demo }}.ipynb
